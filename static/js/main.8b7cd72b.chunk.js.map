{"version":3,"sources":["App/square.tsx","App/board.tsx","App/moves.tsx","App/utils/calculate-winner.ts","App/utils/create-new-squares.ts","App/utils/get-status.ts","App/game.tsx","index.tsx"],"names":["Square","value","onClick","className","Board","squares","Array","fill","map","_","i","Moves","histories","jumpTo","move","desc","calculateWinner","item","a","b","c","createNewSquares","xIsNext","square","index","getStatus","winner","Game","useState","setHistory","stepNumber","setStepNumber","setXIsNext","current","status","_squares","newHistories","length","step","ReactDOM","render","document","getElementById"],"mappings":"uMASeA,EANuB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACpC,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KCWUG,EAZqB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASH,EAAa,EAAbA,QAC7C,OACE,qBAAKC,UAAU,QAAf,SACGG,MAAc,GACZC,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OACH,cAAC,EAAD,CAAgBT,MAAOI,EAAQK,GAAIR,QAAS,kBAAMA,EAAQQ,KAA7CA,SCORC,EAbqB,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,OAAb,OAClC,6BACGD,EAAUJ,KAAI,SAACC,EAAGK,GACjB,IAAMC,EAAOD,EAAI,sBAAkBA,GAAS,mBAC5C,OACE,6BACE,wBAAQZ,QAAS,kBAAMW,EAAOC,IAA9B,SAAsCC,KAD/BD,SCaFE,EApBS,SAACX,GAWvB,IAVA,IAUA,MAVc,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,eAA0B,CAArB,IAAMY,EAAI,KACb,cAAkBA,EAAlB,GAAOC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIf,EAAQa,IAAMb,EAAQa,KAAOb,EAAQc,IAAMd,EAAQa,KAAOb,EAAQe,GACpE,OAAOf,EAAQa,GAGnB,OAAO,MCJMG,EAbU,SACvBhB,EACAiB,EACAZ,GAHuB,OAKvBL,EAAQG,KAAI,SAACe,EAAQC,GACnB,OAAId,IAAMc,EACDF,EAAU,IAAM,IAGlBC,MCDIE,EATG,SAACC,EAAiBJ,GAClC,OAAII,EACI,WAAN,OAAkBA,GAGZ,gBAAN,OADmBJ,EAAU,IAAM,MCE1BK,EAAO,WAClB,MAAgCC,mBAC9B,CAAC,CACCvB,QAASC,MAAe,GAAGC,KAAK,SAFpC,mBAAOK,EAAP,KAAkBiB,EAAlB,KAMA,EAAoCD,mBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA8BH,oBAAS,GAAvC,mBAAON,EAAP,KAAgBU,EAAhB,KAsBMC,EAAUrB,EAAUkB,GAEpBJ,EAASV,EAAgBiB,EAAQ5B,SAEjC6B,EAAST,EAAUC,EAAQJ,GACjC,OACE,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CAAOE,QAAS4B,EAAQ5B,QAASH,QA5BnB,SAACQ,GAAe,IAAD,EAC3ByB,EAAQ,UAAGvB,EAAUkB,UAAb,aAAG,EAAuBzB,QAExC,IAAIW,EAAgBmB,KAAaA,EAASzB,GAA1C,CAIA,IAAML,EAAUgB,EAAiBc,EAAUb,EAASZ,GAC9C0B,EAAY,sBAAOxB,GAAP,CAAkB,CAACP,aAErCwB,EAAWO,GACXL,EAAcnB,EAAUyB,QACxBL,GAAYV,SAkBV,sBAAKnB,UAAU,YAAf,UACE,8BAAM+B,IACN,cAAC,EAAD,CAAOtB,UAAWA,EAAWC,OAjBpB,SAACyB,GACdP,EAAcO,GACdN,EAAWM,EAAO,IAAM,a,MC9B5BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b7cd72b.chunk.js","sourcesContent":["import {SquareProps} from \"./utils/types\";\nimport React from 'react'\n\nconst Square: React.FC<SquareProps> = ({value, onClick}) => (\n  <button className=\"square\" onClick={onClick}>\n    {value}\n  </button>\n);\n\nexport default Square","import Square from './square'\nimport React from 'react'\nimport {BoardProps} from \"./utils/types\";\n\nconst Board: React.FC<BoardProps> = ({squares, onClick}) => {\n  return (\n    <div className=\"board\">\n      {Array<number>(9)\n        .fill(0)\n        .map((_, i) => (\n          <Square key={i} value={squares[i]} onClick={() => onClick(i)}/>\n        ))}\n    </div>\n  );\n}\n\nexport default Board","import React from \"react\";\nimport {MovesProps} from \"./utils/types\";\n\n\nconst Moves: React.FC<MovesProps> = ({histories, jumpTo}) => (\n  <ol>\n    {histories.map((_, move) => {\n      const desc = move ? `Go to move #${move}` : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    })}\n  </ol>\n);\n\nexport default Moves;","import {ISquare} from \"./types\";\n\nconst calculateWinner = (squares: ISquare[]) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (const item of lines) {\n    const [a, b, c] = item;\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\nexport default calculateWinner","import {ISquare} from \"./types\";\n\nconst createNewSquares = (\n  squares: ISquare[],\n  xIsNext: boolean,\n  i: number\n) =>\n  squares.map((square, index) => {\n    if (i === index) {\n      return xIsNext ? \"X\" : \"O\";\n    }\n\n    return square;\n  });\n\nexport default createNewSquares","import {ISquare} from \"./types\";\n\nconst getStatus = (winner: ISquare, xIsNext: boolean) => {\n  if (winner) {\n    return `Winner: ${winner}`;\n  } else {\n    const nextPlayer = xIsNext ? \"X\" : \"O\";\n    return `Next player: ${nextPlayer}`;\n  }\n};\n\nexport default getStatus","import React, {useState} from 'react'\nimport Board from \"./board\";\nimport Moves from \"./moves\";\nimport calculateWinner from \"./utils/calculate-winner\";\nimport createNewSquares from \"./utils/create-new-squares\";\nimport getStatus from \"./utils/get-status\";\nimport {Histories, ISquare} from \"./utils/types\";\n\nexport const Game = () => {\n  const [histories, setHistory] = useState<Histories>(\n    [{\n      squares: Array<ISquare>(9).fill(null)\n    }]\n  );\n\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXIsNext] = useState(true);\n\n  const handleClick = (i: number) => {\n    const _squares = histories[stepNumber]?.squares;\n\n    if (calculateWinner(_squares) || _squares[i]) {\n      return;\n    }\n\n    const squares = createNewSquares(_squares, xIsNext, i);\n    const newHistories = [...histories, {squares}];\n\n    setHistory(newHistories);\n    setStepNumber(histories.length);\n    setXIsNext(!xIsNext);\n  }\n\n  const jumpTo = (step: number) => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  }\n\n  const current = histories[stepNumber];\n\n  const winner = calculateWinner(current.squares);\n\n  const status = getStatus(winner, xIsNext)\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board squares={current.squares} onClick={handleClick}/>\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <Moves histories={histories} jumpTo={jumpTo}/>\n      </div>\n    </div>\n  );\n};\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Game} from './App'\nimport './index.scss';\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}